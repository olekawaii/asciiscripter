include core

data new_video contains
   empty_new_video
   cons_new_video new_frame new_video

data new_frame contains
   new_frame column column horizontal

define fresh_new_frame of_type new_frame as
   new_frame empty_column empty_column empty_horizontal

data horizontal contains
   horizontal grid_cell row row

define empty_horizontal of_type horizontal as
   horizontal empty_grid_cell empty_row empty_row

define insert_horizontal 
of_type fn int fn character fn horizontal horizontal 
as
   lambda index lambda char lambda hor match hor in
      horizontal z n p to match index in
         zero to horizontal full_grid_cell char n p 
         negative index to horizontal 
            z 
            insert_row index char n
            p
         positive index to horizontal 
            z 
            n 
            insert_row index char p

data grid_cell contains
   empty_grid_cell
   full_grid_cell character

data row contains
   empty_row
   cons_row grid_cell row

define insert_row of_type fn nat fn character fn row row as
   lambda index lambda char lambda r 
      match match r in
         empty_row to cons_row empty_grid_cell empty_row
         cons_row _ _ to r
      in
         cons_row head tail to match index in
            one to cons_row full_grid_cell char tail
            succ index to cons_row head insert_row index char tail
         empty_row to ...  -- unreachable

data column contains
   empty_column
   cons_column horizontal column

define 
   insert_new_frame 
of_type 
   fn int fn int fn character fn new_frame new_frame 
as
   lambda x lambda y lambda char lambda vid match vid in
      new_frame col_neg col_pos row_zero to match y in
         negative index to new_frame
            insert_column x index char col_neg
            col_pos
            row_zero
         positive index to new_frame
            col_neg
            insert_column x index char col_pos
            row_zero
         zero to new_frame 
            col_neg
            col_pos
            insert_horizontal x char row_zero 
      
define insert_column of_type fn int fn nat fn character fn column column as
   lambda x lambda y lambda char lambda col 
      match 
         match col in
            empty_column to cons_column empty_horizontal empty_column
            cons_column _ _ to col
      in 
         cons_column head tail to match y in
            one to cons_column insert_horizontal x char head tail
            succ index to cons_column head insert_column x index char tail

define from_video of_type fn video new_video as
   lambda x match x in
      empty_video to empty_new_video
      cons_frame head tail to cons_new_video from_frame head from_video tail

define from_frame of_type fn frame new_frame as lambda f match f in
   unsafe_cons_cell head tail to match head in
      cell coord char to match coord in
         coordinate x y to insert_new_frame x y char from_frame tail
   empty_frame to fresh_new_frame
      
define into_video of_type fn new_video video as lambda vid match vid in
   empty_new_video to empty_video
   cons_new_video head tail to cons_frame into_frame head into_video tail

define into_frame of_type fn new_frame frame as lambda f match f in
   new_frame neg_col pos_col zer_col to 
      layer_frames
         column_to_frame one negative neg_col
         layer_frames
            column_to_frame one positive pos_col   
            horizontal_to_frame zero zer_col 

define horizontal_to_frame of_type fn int fn horizontal frame as 
   lambda y lambda hor match hor in
      horizontal char neg_row pos_row to
         apply_to_frame
            match char in
               empty_grid_cell to lambda x x
               full_grid_cell x to unsafe_cons_cell 
                  cell coordinate zero y x
            layer_frames 
               row_to_frame one y negative neg_row
               row_to_frame one y positive pos_row

define apply_to_frame of_type fn fn frame frame fn frame frame as
   lambda f lambda x f x

define row_to_frame of_type fn nat fn int fn fn nat int fn row frame as 
   lambda index lambda y lambda sign lambda r match r in
      cons_row head tail to 
         apply_to_frame
            match head in
               empty_grid_cell to lambda x x
               full_grid_cell x to 
                  unsafe_cons_cell cell coordinate sign index y x
            row_to_frame succ index y sign tail
      empty_row to empty_frame

define column_to_frame of_type fn nat fn fn nat int fn column frame as 
   lambda index lambda sign lambda col match col in
      empty_column to empty_frame
      cons_column head tail to layer_frames 
         horizontal_to_frame sign index head
         column_to_frame succ index sign tail
      

-- data new_frame contains
--    new_frame column column horizontal
